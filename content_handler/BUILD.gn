# Copyright 2016 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

assert(is_fuchsia)

import("//build/vulkan/config.gni")

template("flutter_content_handler") {
  invoker_output_name = invoker.output_name
  extra_deps = invoker.extra_deps

  executable(target_name) {
    output_name = invoker_output_name

    defines = []

    libs = []

    sources = [
      "accessibility_bridge.cc",
      "accessibility_bridge.h",
      "application.cc",
      "application.h",
      "application_runner.cc",
      "application_runner.h",
      "compositor_context.cc",
      "compositor_context.h",
      "engine.cc",
      "engine.h",
      "fuchsia_font_manager.cc",
      "fuchsia_font_manager.h",
      "isolate_configurator.cc",
      "isolate_configurator.h",
      "main.cc",
      "platform_view.cc",
      "platform_view.h",
      "session_connection.cc",
      "session_connection.h",
      "surface.cc",
      "surface.h",
      "task_observers.cc",
      "task_observers.h",
      "unique_fdio_ns.h",
      "vulkan_surface.cc",
      "vulkan_surface.h",
      "vulkan_surface_pool.cc",
      "vulkan_surface_pool.h",
      "vulkan_surface_producer.cc",
      "vulkan_surface_producer.h",
    ]

    # The use of these dependencies is temporary and will be moved behind the
    # embedder API.
    flutter_deps = [
      "$flutter_root/assets",
      "$flutter_root/common",
      "$flutter_root/flow",
      "$flutter_root/glue",
      "$flutter_root/lib/ui",
      "$flutter_root/runtime",
      "$flutter_root/sky/engine/platform",
      "$flutter_root/third_party/txt",
      "$flutter_root/vulkan",
      "$flutter_root/fml",
      "$flutter_root/shell/common",
      "$flutter_root/shell/gpu",
    ]

    deps = [
             "//third_party/dart/runtime/bin:libdart_builtin",
             "//third_party/dart/runtime/platform:libdart_platform",
             "//garnet/public/lib/app/cpp",
             "//garnet/public/lib/fsl",
             "//garnet/public/lib/fxl",
             "//garnet/public/lib/icu_data/cpp",
             "//garnet/public/lib/svc/cpp",
             "//garnet/public/lib/ui/input/fidl",
             "//garnet/public/lib/ui/scenic:client",
             "//garnet/public/lib/ui/views/fidl:v1",
             "//garnet/public/lib/vulkan",
             "//garnet/public/lib/zip",
             "//peridot/public/lib:fidl",
             "//third_party/rapidjson",
             "//third_party/skia",
             "//topaz/lib/tonic",
             "//topaz/public/dart-pkg/fuchsia",
             "//topaz/public/lib/ui/flutter/sdk_ext",
             "//third_party/skia:gpu",
             "//third_party/zlib:minizip",
             "//zircon/public/lib/trace-provider",
           ] + extra_deps + flutter_deps

    # The flags below are needed so that Dart's CPU profiler can walk the
    # C++ stack.
    cflags = [
      "-mno-omit-leaf-frame-pointer",
      "-fno-omit-frame-pointer",
    ]

    # This flag is needed so that the call to dladdr() in Dart's native symbol
    # resolver can report good symbol information for the CPU profiler.
    ldflags = [ "-rdynamic" ]
  }
}

flutter_content_handler("aot") {
  output_name = "flutter_aot_runner"
  extra_deps = [ "//third_party/dart/runtime:libdart_precompiled_runtime" ]
}

flutter_content_handler("jit") {
  output_name = "flutter_jit_runner"
  extra_deps = [ "//third_party/dart/runtime:libdart_jit" ]
}
